c
recipe&.fields[:chef]&.fields[:name]
recipe&.fields[:chef].name
recipe&.fields[:chef]
c
recipe&.fields[:tags].map(&:name)
recipe&.fields[:tags].map(&:id)
recipe&.fields[:tags]
c
@pages.class
@pages
@pages = [1,2].paginate(page: params[:page], per_page: 3)
c
[1,2].paginate(page: params[:page], per_page: 3)
c
client.page_count
c
(1..client.page_count).to_a
client.page_count
c
client.page_count
c
client.page_count
client.page_coun
c
client.page_count
c
client.page_count
c
n
c
n
quotient.zero?
quotient
quotient.zero
n
quotient, remainder = entries.total.divmod(PER_PAGE)
c
client.page_count
c
n
c
quotient, remainder = entries.total.divmod(PER_PAGE)
c
client.entries
client.page_count
client = Contentful::Recipes.new(params[:page])
client.page_count
c
c.total.class
c.total
c=client.entries(DEFAULT_OPTIONS.merge(options))
c
page
c
page
c
page
c
page
c
page
c
page
c
21.divmod 10
20.divmod 10
19.divmod 10
11.divmod 10
11/10
e.total
e=Contentful::Recipes.new.entries
Contentful::Recipes.new.entries
c
Contentful::Recipes.new.entries
@recipes = Contentful::Recipes.new.entries.paginate(page: params[:page], per_page: 30)
require 'will_paginate/array'
c
r.first.description
r.first.photo&.url
r.first.photo.url
r.first.photo
r.first.title
r.first.id
r.first..id
a.fields[:chef]
recipe.fields[:chef]
a.fields.chef
a.fields.checf
a.fields
a.chef
a=client.entry "4dT8tcb6ukGSIg2YyuGEOm"
client.entry "4dT8tcb6ukGSIg2YyuGEOm"
client.entry 4dT8tcb6ukGSIg2YyuGEOm
client
r.first.sys.id
r.first.sys
r.first.id
r.first
r
r.first.fields[:name]
r.first.fields[:title]
r.first.fields.title
r.first.fields.productName
r.first.fields.name
r.first.fields
r=client.entries(content_type: RECIPE_CONTENT_TYPE)
client.entries(content_type: 'nyancat')
client.content_types
client.entries(content_type: 'cat')
client.entries('sys.id[ne]' => 'nyancat')
client.entries(content_type: 'cat')
client.entries(content_type: 'w')
client.entry(content_type: 'w')
client.entry('wwww')
exit
client
res.first.fields
res.first
res.first.photo.url
res.first
res
exit
wxit
exi
response.data.recipeCollection
res.first.chef
res.first.owner
res.first.photo.url
res.first.photo
res.first.photo.
res.first.fields[:tags].first.fields
res.first.fields[:tags].fi
res.first.fields[:tags].count
res.first.fields[:tags]
res.first.fields[:tags].pluck(:name)
res.first.fields[:tags].first.name
res.first.fields[:tags].name
res.first.fields[:tags]
res.first.fields
res.first.owner
res.first.title
res.first.tile
res.first.inspect
res.first
res.all
res
